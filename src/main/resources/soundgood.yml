openapi: 3.0.0
info:
  version: 1.0.0
  title: Sample API
  description: A sample API to illustrate OpenAPI concepts
servers:
  - url: https://soundgood.music/
paths:
  /user/{userid}:
    get:
      description: Returns a user
      parameters:
        - name: userid
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
  /user:
    post:
      description: Lets a user post a new user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/User"

      responses:
        '200':
          description: Successfully created a new user

        '400':
          description: Invalid request
  /booking/{bookingid}:
    get:
      description: Returns a booking
      parameters:
        - name: bookingid
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Booking"
  /instrumenttype/{instrumentid}:
    get:
      description: Returns a instrument type
      parameters:
        - name: instrumentid
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InstrumentType"
  /lease/{leaseid}:
    get:
      description: Returns a lease
      parameters:
        - name: leaseid
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Lease"
  /lesson/{lessonid}:
    get:
      description: Returns a lesson
      parameters:
        - name: lessonid
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Lesson"
  /parent/{parentid}:
    get:
      description: Returns a parent
      parameters:
        - name: parentid
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Parent"
  /rentalinstrument/{rentalid}:
    get:
      description: Returns a rental instrument
      parameters:
        - name: rentalid
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RentalInstrument"
  /sibling/{siblingid}:
    get:
      description: Returns a sibling
      parameters:
        - name: siblingid
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Sibling"
  /userapplication/{applicationid}:
    get:
      description: Returns a user application
      parameters:
        - name: applicationid
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserApplication"
  /userinstrument/{instrumentid}:
    get:
      description: Returns a user instrument
      parameters:
        - name: instrumentid
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserInstrument"
  /userpayment/{paymentid}:
    get:
      description: Returns a user payment
      parameters:
        - name: paymentid
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserPayment"


components:
  schemas:
    User:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        personNumber:
          type: string
        age:
          type: integer
        email:
          type: string
    Booking:
      type: object
      properties:
        id:
          type: integer
        startTime:
          type: string
        endTime:
          type: string
        lessonId:
          type: integer
        studentId:
          type: integer
        instructorId:
          type: integer
    InstrumentType:
      type: object
      properties:
        id:
          type: integer
        type:
          type: string
    Lease:
      type: object
      properties:
        id:
          type: integer
        startTime:
          type: string
        endTime:
          type: string
        rentalInstrumentId:
          type: integer
        studentId:
          type: integer
    Lesson:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        description:
          type: string
        level:
          type: string
        minParticipants:
          type: integer
        maxParticipants:
          type: integer
        type:
          type: string
        genre:
          type: string
    Parent:
      type: object
      properties:
        studentId:
          type: integer
        parentId:
          type: integer
    RentalInstrument:
      type: object
      properties:
        id:
          type: integer
        description:
          type: string
        serialNumber:
          type: string
        instrumentTypeId:
          type: integer
    Sibling:
      type: object
      properties:
        studentIdOne:
          type: integer
        studentIdTwo:
          type: integer
    UserApplication:
      type: object
      properties:
        id:
          type: integer
        letter:
          type: string
        instrumentTypeId:
          type: integer
        userId:
          type: integer
    UserInstrument:
      type: object
      properties:
        id:
          type: integer
        instrumentTypeId:
          type: integer
    UserPayment:
      type: object
      properties:
        id:
          type: integer
        type:
          type: string
        amount:
          type: integer
        currency:
          type: string
        userid:
          type: integer